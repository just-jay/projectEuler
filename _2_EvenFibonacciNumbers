package _2_EvenFibonacciNumbers;

public class Driver {
/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
 *  the first 10 terms will be:
 *  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *  By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 *  find the sum of the even-valued terms.
 */
	public static void main(String[] args) {

		System.out.println(findFibSum(4000000)); //4,000,000 | 4 million
		//Answer 4613732
	}

	public static int findFibSum(int bound){
		int val = 0 ; //sum
		int prev = 1; //first fib num
		int curr = 2; //second fib num
		
		//start sequence with 1 and 2;
		while(curr <= bound){
			if(curr%2 == 0){ //check even or odd
				val+=curr;
			}

			//update values           
			int temp = prev; //store prev
			prev = curr; //update prev to curr
			curr = temp+curr; // new curr equals old prev plus curr
		}
		return val;
	}
}
